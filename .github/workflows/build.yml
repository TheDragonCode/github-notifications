name: Build application

on:
    workflow_dispatch:
        inputs:
            tag:
                description: 'Tag version'
                required: true
    workflow_call:
        inputs: 
            tag:
                type: string
                required: true

permissions: write-all

jobs:
    build:
        runs-on: ubuntu-latest
        
        outputs: 
            tag: ${{ steps.tag.outputs.tag }}
        
        steps:
            -   name: Extract the tag version
                id: tag
                run: |
                    if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
                      GITHUB_REF=${{ github.event.inputs.tag }}
                    fi
                    echo "tag=${GITHUB_REF##*v}" >> "$GITHUB_OUTPUT"

            -   name: Checkout the code
                uses: actions/checkout@v4

            -   name: Setup PHP
                uses: shivammathur/setup-php@v2
                with:
                    extensions: curl, mbstring, zip, pcntl, pdo, pdo_sqlite, iconv, json, dom, curl, libxml, fileinfo, tokenizer, xml
                    ini-values: error_reporting=E_ALL
                    coverage: xdebug

            -   name: Install the dependencies
                run: composer install --prefer-dist --no-progress --no-interaction --no-suggest

            -   name: Run tests
                run: composer test

            -   name: Create the PHAR file
                run: php ./notifications app:build notifications --build-version=${{ steps.tag.outputs.tag }} --ansi

            -   name: Show version
                run: php builds/notifications --version

            -   name: Upload artifact
                uses: actions/upload-artifact@v4
                with:
                    name: notifications
                    path: builds/notifications
                    retention-days: 14
    
    push:
        runs-on: ubuntu-latest
        
        needs: build

        steps:
            -   name: Checkout the code
                uses: actions/checkout@v4

            -   name: Remove old file
                run: rm -f builds/notifications

            -   uses: actions/download-artifact@v4
                with:
                    name: notifications
                    path: builds

            -   name: Create a Pull Request
                uses: peter-evans/create-pull-request@v6
                env:
                    VERSION: ${{ needs.build.outputs.tag }}
                with:
                    branch: build/app
                    branch-suffix: random
                    delete-branch: true
                    add-paths: ./builds/notifications
                    title: "üèóÔ∏è Build the application version $VERSION"
                    commit-message: üèóÔ∏è Build the application version $VERSION
                    body: Application compiled successfully
                    labels: build
